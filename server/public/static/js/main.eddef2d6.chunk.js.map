{"version":3,"sources":["hooks/axiosRequests.ts","components/CustomButton/CustomButton.component.tsx","components/InputField/InputField.component.tsx","pages/SignUpPage/SignUpPage.component.tsx","components/Nav/Nav.component.tsx","components/App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["addPlayerToGroup","player","a","email","fName","groupId","axios","post","error","console","log","sendOutEmails","get","withCredentials","data","getCurrentUser","CustomButton","children","props","className","InputField","handleChange","label","type","value","otherProps","htmlFor","cols","rows","onChange","SignUpPage","initialState","useState","members","setMembers","event","target","name","onSubmit","preventDefault","onClick","Nav","currentUser","lName","_id","href","App","useCookies","cookies","setCookie","userData","setUserData","useEffect","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","CookiesProvider","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eddef2d6.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { PlayerStateData } from \"../pages/SignUpPage/SignUpPage.component\";\r\n\r\nexport const getAllPlayers = async () => {\r\n    try {\r\n        const { data } = await axios.get(\r\n            \"https://secretsanta-react-ts.herokuapp.com//v1/emailList\",\r\n            {\r\n                withCredentials: true,\r\n            }\r\n        );\r\n        return data;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const addPlayerToGroup = async (player: PlayerStateData) => {\r\n    const { email, fName, groupId } = player;\r\n    try {\r\n        axios.post(\r\n            \"https://secretsanta-react-ts.herokuapp.com//v1/emailList/createEmailList\",\r\n            {\r\n                email,\r\n                fName,\r\n                groupId,\r\n            }\r\n        );\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const sendOutEmails = async () => {\r\n    try {\r\n        const { data } = await axios.get(\r\n            \"https://secretsanta-react-ts.herokuapp.com//v1/emailList/sendNewEmail\",\r\n            {\r\n                withCredentials: true,\r\n            }\r\n        );\r\n        return data;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const getCurrentUser = async () => {\r\n    try {\r\n        const { data } = await axios.get(\r\n            \"https://secretsanta-react-ts.herokuapp.com//v1/currentuser\",\r\n            {\r\n                withCredentials: true,\r\n            }\r\n        );\r\n        console.log(\"getCurrentUser\", data);\r\n        return data;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n","import React from \"react\";\r\nimport \"./CustomButton.styles.scss\";\r\n\r\n// interface CustomButtonData {\r\n//     children: string | number;\r\n// }\r\n\r\nconst CustomButton: any = ({ children, ...props }: any) => {\r\n    return (\r\n        <button className=\"customButton\" {...props}>\r\n            {children}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default CustomButton;\r\n","import React from \"react\";\r\nimport \"./InputField.styles.scss\";\r\n\r\ninterface InputFieldData {\r\n    handleChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n    name: string;\r\n    label?: string;\r\n    type: string;\r\n    value: string;\r\n    otherProps?: any;\r\n}\r\n\r\nconst InputField: React.FC<InputFieldData> = ({\r\n    handleChange,\r\n    label,\r\n    type,\r\n    value,\r\n    ...otherProps\r\n}) => {\r\n    return (\r\n        <div className=\"inputField-container\">\r\n            {label && <label htmlFor=\"\">{label}</label>}\r\n            {type === \"textarea\" ? (\r\n                <textarea cols={30} rows={10} {...otherProps}></textarea>\r\n            ) : (\r\n                <input\r\n                    onChange={handleChange}\r\n                    type={type}\r\n                    value={value}\r\n                    {...otherProps}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InputField;\r\n","import React, { useState } from \"react\";\r\nimport \"./SignUpPage.styles.scss\";\r\nimport CustomButton from \"../../components/CustomButton/CustomButton.component\";\r\nimport InputField from \"../../components/InputField/InputField.component\";\r\nimport { addPlayerToGroup, sendOutEmails } from \"../../hooks/axiosRequests\";\r\n\r\nexport interface PlayerStateData {\r\n    fName: string;\r\n    email: string;\r\n    groupId: string;\r\n}\r\n\r\nconst SignUpPage: React.FC<any> = () => {\r\n    const initialState: PlayerStateData = {\r\n        fName: \"\",\r\n        email: \"\",\r\n        groupId: \"\",\r\n    };\r\n\r\n    const [members, setMembers] = useState<PlayerStateData>({\r\n        fName: \"\",\r\n        email: \"\",\r\n        groupId: \"\",\r\n    });\r\n    const { email, fName, groupId } = members;\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n        const { value, name } = event.target;\r\n        setMembers({ ...members, [name]: value });\r\n    };\r\n\r\n    const handleFormSubmit = (event: any) => {\r\n        event.preventDefault();\r\n        addPlayerToGroup(members);\r\n        console.log(members);\r\n        setMembers(initialState);\r\n    };\r\n\r\n    const sendOutEmailHelper = () => {\r\n        sendOutEmails();\r\n        console.log(\"sent email\");\r\n    };\r\n\r\n    console.log(members);\r\n\r\n    return (\r\n        <div className=\"bg-christmasTree bg-no-repeat bg-cover signUpPage-container\">\r\n            {/* <div className=\"border-8 border-red-500 w-3/5\"></div> */}\r\n            <div className=\"signUpPage-form-container\">\r\n                <form onSubmit={handleFormSubmit}>\r\n                    <div className=\"signUpPage-input-container\">\r\n                        <InputField\r\n                            name={\"fName\"}\r\n                            label={\"Full Name\"}\r\n                            type=\"text\"\r\n                            value={fName}\r\n                            handleChange={handleChange}\r\n                        />\r\n                        <InputField\r\n                            name={\"email\"}\r\n                            label={\"Email\"}\r\n                            type={\"email\"}\r\n                            value={email}\r\n                            handleChange={handleChange}\r\n                        />\r\n                        <InputField\r\n                            name={\"groupId\"}\r\n                            label={\"Group ID\"}\r\n                            type=\"text\"\r\n                            value={groupId}\r\n                            handleChange={handleChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"signUpPage-button-form\">\r\n                        <CustomButton type=\"submit\">Join Group</CustomButton>\r\n                        <CustomButton\r\n                            type=\"button\"\r\n                            onClick={sendOutEmailHelper}\r\n                        >\r\n                            Send Out Emails\r\n                        </CustomButton>\r\n                    </div>\r\n                </form>\r\n                <div className=\"signUpPage-button\"></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignUpPage;\r\n","import React from \"react\";\r\nimport \"./Nav.styles.scss\";\r\n\r\nimport { currentUserData } from \"../App/App\";\r\n\r\ninterface navData {\r\n    currentUser: currentUserData | null;\r\n}\r\n\r\nconst Nav: React.FC<navData> = ({ currentUser }) => {\r\n    console.log(currentUser);\r\n    return (\r\n        <div className={\"nav-container\"}>\r\n            <div className={\"nav-userIdContainer\"}>\r\n                Group ID: &nbsp;\r\n                {currentUser?.fName ? (\r\n                    <div className={\"nav-userId\"}>\r\n                        {` ${currentUser?.fName}${currentUser?.lName}`}\r\n                    </div>\r\n                ) : null}\r\n            </div>\r\n            <div className={\"nav-linkContainer\"}>\r\n                {!currentUser?._id ? (\r\n                    <a href=\"https://secretsanta-react-ts.herokuapp.com/v1/google/auth/google\">\r\n                        Login\r\n                    </a>\r\n                ) : (\r\n                    <a href=\"https://secretsanta-react-ts.herokuapp.com/v1/google/logout\">\r\n                        Log out\r\n                    </a>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nav;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Switch, Route } from \"react-router\";\r\nimport { getCurrentUser } from \"../../hooks/axiosRequests\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport SignUpPage from \"../../pages/SignUpPage/SignUpPage.component\";\r\nimport Nav from \"../Nav/Nav.component\";\r\n\r\nimport \"./App.css\";\r\n\r\nexport interface currentUserData {\r\n    email: string;\r\n    fName: string;\r\n    lName: string;\r\n    profilePicture: string;\r\n    _id: string;\r\n}\r\n\r\nconst App = () => {\r\n    const [cookies, setCookie] = useCookies([\"currentUser\"]);\r\n    const [userData, setUserData] = useState<currentUserData | null>(null);\r\n    useEffect(() => {\r\n        (async () => {\r\n            const data: currentUserData = await getCurrentUser();\r\n            setUserData(data);\r\n        })();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setCookie(\"currentUser\", userData, { path: \"/\" });\r\n    }, [userData, setCookie]);\r\n\r\n    return (\r\n        <div>\r\n            <Nav currentUser={cookies.currentUser} />\r\n            <Switch>\r\n                <Route path=\"/\" exact component={SignUpPage} />\r\n            </Switch>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { CookiesProvider } from \"react-cookie\";\r\nimport App from \"./components/App/App\";\r\nimport \"./index.css\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <CookiesProvider>\r\n            <React.StrictMode>\r\n                <App />\r\n            </React.StrictMode>\r\n        </CookiesProvider>\r\n    </BrowserRouter>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}